apiVersion: apps/v1
kind: Deployment
metadata:
  name: backend-deploy
  labels:
    name: backend
spec:
  replicas: 1
  selector:
    matchLabels:
      app: backend # == pod template: labels
  template:
    metadata:
      labels:
        app: backend
    spec:
      containers:
      - name: app
        image: node-app
        imagePullPolicy: Never
        ports:
        - containerPort: 3000
      - name: proxy
        image: nginx:alpine
        ports:
        - containerPort: 443
        - containerPort: 80
        volumeMounts:
        - name: nginx-conf-file
          mountPath: /etc/nginx/nginx.conf
          subPath: nginx.conf
          readOnly: true
        - name: default-conf-file
          mountPath: /etc/nginx/templates/default.conf.template
          subPath: default.conf.template
          readOnly: true
        - name: certificates
          mountPath: /etc/nginx/certs
          readOnly: true
      volumes:
      - name: nginx-conf-file
        configMap:
          name: nginx-conf
      - name: default-conf-file
        configMap:
          name: default-conf
      - name: certificates
        secret:
          secretName: backend-secret
---
apiVersion: v1
kind: Service
metadata:
  name: backend-service
spec:
  # type: ClusterIP # or NodePort
  type: LoadBalancer
  selector:
    app: backend # == pod template: labels
  ports:
    - protocol: TCP
      name: https
      port: 443
      targetPort: 443 # == pod template: spec ports container port
    - protocol: TCP
      name: http
      port: 80
      targetPort: 80 # == pod template: spec ports container port
